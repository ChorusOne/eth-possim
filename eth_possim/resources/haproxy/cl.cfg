global
  maxconn 4096        # To work well in docker
  fd-hard-limit 10000  # To work well in docker

defaults
  log global
  log stdout len 65535 format raw daemon debug
  option httplog
  option log-health-checks

  mode http
  timeout client 10s
  timeout connect 5s
  timeout http-keep-alive 60s
  timeout http-request 10s
  timeout server 10s

# CL API (shared)

frontend eth_api
  bind 0.0.0.0:{{ cfg.haproxy.cl.port_api }}
  default_backend eth_api

backend eth_api
  timeout check 5s
  option httpchk
  http-check send meth GET uri /lighthouse/syncing
  http-check expect status 200
  http-check expect string '{"data":"Synced"}'

  # {%- for node in cfg.cl.lh_node %}
  server lh-{{ node.index }} 127.0.0.1:{{ node.port_api }} check inter 6s
  # {%- endfor %}

# CL API (lighthouse)

frontend eth_lh_api
  bind 0.0.0.0:{{ cfg.haproxy.cl.port_lh_api }}
  default_backend eth_lh_api

backend eth_lh_api
  option httpchk
  http-check send meth GET uri /lighthouse/syncing
  http-check expect status 200
  http-check expect string '{"data":"Synced"}'

  # {%- for node in cfg.cl.lh_node %}
  server lh-{{ node.index }} 127.0.0.1:{{ node.port_api }} check inter 6s
  # {%- endfor %}

# CL API (teku)

frontend eth_teku_api
  bind 0.0.0.0:{{ cfg.haproxy.cl.port_teku_api }}
  default_backend eth_teku_api

backend eth_teku_api
  timeout server 30s
  option httpchk
  option http-keep-alive
  http-check send meth GET uri /eth/v1/node/health
  http-check expect status 200
  http-reuse always

  # {%- for node in cfg.cl.teku_node %}
  server teku-{{ node.index }} 127.0.0.1:{{ node.port_api }} check inter 6s
  # {%- endfor %}
